
# ロガー
[loggers]
keys=root, server, app

# 出力ハンドラ
[handlers]
keys=consoleHandler, fileHandler, fileHandlerApp

# 出力形式
[formatters]
keys=logFormatter

###############################################################################
# loggerの詳細設定
###############################################################################
# rootは設定してないとエラーになる
[logger_root]
level=DEBUG
handlers=consoleHandler

# ロガー(server)
[logger_server]
level=DEBUG
handlers=fileHandler
qualname=server
propagate=0

# ロガー(Webアプリ)
# 非同期で動くのでサーバーログとは別にする
[logger_app]
level=DEBUG
##handlers=fileHandlerApp, consoleHandler
handlers=fileHandlerApp
qualname=app
propagate=0

###############################################################################
# Handlerの詳細設定
###############################################################################
# コンソールハンドラ
[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=logFormatter
args=(sys.stdout,)

# ファイルハンドラ(server)
[handler_fileHandler]
class=handlers.RotatingFileHandler
level=DEBUG
formatter=logFormatter
args=('log/server.log','a')

# ファイルハンドラ(app)
[handler_fileHandlerApp]
class=handlers.RotatingFileHandler
level=DEBUG
formatter=logFormatter
args=('log/app.log','a')

###############################################################################
# Formatterの詳細設定
###############################################################################
# 出力形式
[formatter_logFormatter]
#format=%(asctime)s - %(name)s - %(levelname)s - %(message)s
format=%(asctime)s %(levelname)8s %(message)s
datefmt=
